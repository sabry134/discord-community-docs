{
  "openapi": "3.0.0",
  "info": {
    "title": "Discord Community Dashboard API",
    "version": "1.0.0",
    "description": "API for managing community features, announcements, roles, and user points. \n\n**Scopes**: Please ensure you have the necessary scopes to access the endpoints. Each endpoint may require specific permissions based on the actions being performed."
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Local server"
    }
  ],
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/users/hello": {
      "get": {
        "summary": "Say Hello",
        "responses": {
          "200": {
            "description": "Returns a hello message",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "Hello world"
                }
              }
            }
          }
        }
      }
    },
    "/users/new-announcement": {
      "post": {
        "summary": "Create a New Announcement",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title of the announcement"
                  },
                  "content": {
                    "type": "string",
                    "description": "The content of the announcement"
                  },
                  "image": {
                    "type": "string",
                    "description": "URL of the image associated with the announcement"
                  }
                },
                "required": ["title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Announcement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Announcement created successfully."
                    },
                    "announcement": {
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title of the announcement"
                        },
                        "content": {
                          "type": "string",
                          "description": "The content of the announcement"
                        },
                        "image": {
                          "type": "string",
                          "description": "URL of the image associated with the announcement"
                        },
                        "author": {
                          "type": "string",
                          "description": "The author of the announcement"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of when the announcement was created"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing fields"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/new-post": {
      "post": {
        "summary": "Create a New Post",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "post_title": {
                    "type": "string",
                    "description": "The title of the post"
                  },
                  "post_content": {
                    "type": "string",
                    "description": "The content of the post"
                  },
                  "post_image": {
                    "type": "string",
                    "description": "URL of the post image"
                  },
                  "author_image": {
                    "type": "string",
                    "description": "Image of the author"
                  }
                },
                "required": ["post_title"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Post created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Post created successfully."
                    },
                    "post": {
                      "type": "object",
                      "properties": {
                        "post_title": {
                          "type": "string",
                          "description": "The title of the post"
                        },
                        "post_content": {
                          "type": "string",
                          "description": "The content of the post"
                        },
                        "post_image": {
                          "type": "string",
                          "description": "URL of the post image"
                        },
                        "post_author": {
                          "type": "string",
                          "description": "The author of the post"
                        },
                        "author_image": {
                          "type": "string",
                          "description": "Image of the author"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp of when the post was created"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request due to missing fields"
          },
          "403": {
            "description": "API is currently disabled or scope is missing"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/all-posts": {
      "get": {
        "summary": "Get All Posts",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of all posts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "post_title": {
                        "type": "string",
                        "description": "The title of the post"
                      },
                      "post_content": {
                        "type": "string",
                        "description": "The content of the post"
                      },
                      "post_image": {
                        "type": "string",
                        "description": "URL of the post image"
                      },
                      "post_author": {
                        "type": "string",
                        "description": "The author of the post"
                      },
                      "author_image": {
                        "type": "string",
                        "description": "Image of the author"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timestamp of when the post was created"
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled or scope is missing"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/staff-list": {
      "get": {
        "summary": "Retrieve Staff List",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Staff list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "example": "Staff member 1, Staff member 2"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Staff list not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Staff list not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to retrieve staff list"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Staff List",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the staff list"
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Staff list updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Staff list updated successfully."
                    },
                    "content": {
                      "type": "string",
                      "description": "The updated staff list content."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Content is required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Content is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to update staff list."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/community-rules": {
      "get": {
        "summary": "Retrieve Community Rules",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Community rules retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content": {
                      "type": "string",
                      "example": "Rule 1, Rule 2"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Community rules not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community rules not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Failed to retrieve community rules"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Update Community Rules",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "description": "The content of the community rules"
                  }
                },
                "required": ["content"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Community rules updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Community rules updated successfully."
                    },
                    "content": {
                      "type": "string",
                      "description": "The updated community rules content."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Content is required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Content is required."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Failed to update community rules."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/new-position": {
      "post": {
        "summary": "Create or Update a Position",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "position_name": { "type": "string" },
                  "questions": {
                    "type": "array",
                    "items": { "type": "string" }
                  },
                  "discord_channel": { "type": "string" },
                  "position_image": { "type": "string" },
                  "position_description": { "type": "string" },
                  "status": { "type": "string" }
                },
                "required": ["position_name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Position created or updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Position created/updated successfully."
                    },
                    "position": {
                      "type": "object",
                      "properties": {
                        "position_id": { "type": "integer" },
                        "position_name": { "type": "string" },
                        "questions": {
                          "type": "array",
                          "items": { "type": "string" }
                        },
                        "discord_channel": { "type": "string" },
                        "position_image": { "type": "string" },
                        "position_description": { "type": "string" },
                        "status": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - You can only create up to 10 positions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "You can only create up to 10 positions."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - API is currently disabled.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "API is currently disabled."
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal server error."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/delete-position/{position_name}": {
      "delete": {
        "summary": "Delete a Position",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "position_name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Position deleted successfully"
          },
          "404": {
            "description": "Position not found"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/users/shop-setup": {
      "post": {
        "summary": "Set up a new shop role",
        "operationId": "setupShopRole",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_name": {
                    "type": "string",
                    "description": "The name of the role"
                  },
                  "price": {
                    "type": "number",
                    "description": "The price of the role"
                  },
                  "role_id": {
                    "type": "string",
                    "description": "The Discord ID of the role"
                  }
                },
                "required": ["role_name", "price", "role_id"]
              }
            }
          },
          "description": "Create a new role for the shop"
        },
        "responses": {
          "201": {
            "description": "Role added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "role_name": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "role_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a shop role",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_name": {
                    "type": "string",
                    "description": "The name of the role to be deleted"
                  }
                },
                "required": ["role_name"]
              }
            }
          },
          "description": "Delete an existing role from the shop"
        },
        "responses": {
          "200": {
            "description": "Role deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "role": {
                      "type": "object",
                      "properties": {
                        "role_name": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "role_id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "role_name is required"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "404": {
            "description": "Role not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/points/{userId}": {
      "get": {
        "summary": "Get user points",
        "operationId": "getUserPoints",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User points retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "string"
                    },
                    "points": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/add-points": {
      "post": {
        "summary": "Add points to a user",
        "operationId": "addUserPoints",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  },
                  "points": {
                    "type": "number"
                  }
                },
                "required": ["user_id", "points"]
              }
            }
          },
          "description": "Add points to a specific user"
        },
        "responses": {
          "200": {
            "description": "Points added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "user_id": {
                          "type": "string"
                        },
                        "points": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/remove-points": {
      "post": {
        "summary": "Remove points from a user",
        "operationId": "removeUserPoints",
        "security": [
          {
            "Bearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string"
                  },
                  "points": {
                    "type": "number"
                  }
                },
                "required": ["user_id", "points"]
              }
            }
          },
          "description": "Remove points from a specific user"
        },
        "responses": {
          "200": {
            "description": "Points removed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "points": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "403": {
            "description": "API is currently disabled"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/buy-role": {
      "post": {
        "summary": "Purchase a role",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "string",
                  "example": "123456789012345678"
                },
                "role_name": {
                  "type": "string",
                  "example": "VIP"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Role purchased and assigned successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Role purchased and assigned successfully"
                },
                "role": {
                  "type": "string",
                  "example": "VIP"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "user_id and role_name are required"
                }
              }
            }
          },
          "404": {
            "description": "User or Role not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to assign role on Discord"
                }
              }
            }
          }
        }
      }
    },
    "/users/is-running": {
      "get": {
        "summary": "Check if the bot is running",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bot running status",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isRunning": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "Bot is running."
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/start-bot": {
      "get": {
        "summary": "Start the bot",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bot started successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bot started successfully."
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "API is currently disabled"
                }
              }
            }
          },
          "500": {
            "description": "Failed to start bot",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to start bot."
                }
              }
            }
          }
        }
      }
    },
    "/users/stop-bot": {
      "get": {
        "summary": "Stop the bot",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Bot stopped successfully",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Bot stopped successfully."
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "API is currently disabled"
                }
              }
            }
          },
          "500": {
            "description": "Failed to stop bot",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Failed to stop bot."
                }
              }
            }
          }
        }
      }
    },
    "/users/disable-command/{commandName}": {
      "post": {
        "summary": "Disable a command",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "type": "string",
            "example": "ping"
          }
        ],
        "responses": {
          "200": {
            "description": "Command disabled",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Command ping disabled."
                }
              }
            }
          },
          "404": {
            "description": "Command not found",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Command not found"
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "API is currently disabled"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/enable-command/{commandName}": {
      "get": {
        "summary": "Enable a command",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "description": "The name of the command to enable",
            "schema": {
              "type": "string",
              "example": "ping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command enabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Command ping enabled."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Command not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Command not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Enable a command",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "commandName",
            "in": "path",
            "required": true,
            "description": "The name of the command to enable",
            "schema": {
              "type": "string",
              "example": "ping"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Command enabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Command ping enabled."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Command not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Command not found"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/logs": {
      "get": {
        "summary": "Fetch Moderation Logs",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Log #1"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  },
                  "actionType": {
                    "type": "string",
                    "example": "WARN"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Spamming"
                  },
                  "details": {
                    "type": "string",
                    "example": "Evidence link or additional details"
                  },
                  "timestamp": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-09-25T12:34:56Z"
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "API is currently disabled"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/warn-user": {
      "post": {
        "summary": "Warn a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Spamming"
                  },
                  "evidence": {
                    "type": "string",
                    "example": "Link to evidence"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "reason", "moderator"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User warned successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "WARN action recorded successfully"
                    },
                    "moderation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "user_id": {
                          "type": "string",
                          "example": "123456789012345678"
                        },
                        "type": {
                          "type": "string",
                          "example": "WARN"
                        },
                        "reason": {
                          "type": "string",
                          "example": "Spamming"
                        },
                        "evidence": {
                          "type": "string",
                          "example": "Link to evidence"
                        },
                        "moderator": {
                          "type": "string",
                          "example": "Moderator123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "user_id, reason, and moderator are required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/mute-user": {
      "post": {
        "summary": "Mute a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "duration": {
                    "type": "string",
                    "example": "30m"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Inappropriate behavior"
                  },
                  "evidence": {
                    "type": "string",
                    "example": "Link to evidence"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "duration", "reason", "moderator"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User muted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "MUTE action recorded successfully"
                    },
                    "moderation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 2
                        },
                        "user_id": {
                          "type": "string",
                          "example": "123456789012345678"
                        },
                        "type": {
                          "type": "string",
                          "example": "MUTE"
                        },
                        "duration": {
                          "type": "string",
                          "example": "30m"
                        },
                        "reason": {
                          "type": "string",
                          "example": "Inappropriate behavior"
                        },
                        "evidence": {
                          "type": "string",
                          "example": "Link to evidence"
                        },
                        "moderator": {
                          "type": "string",
                          "example": "Moderator123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "user_id, duration, reason, and moderator are required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/unmute-user": {
      "post": {
        "summary": "Unmute a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "moderator"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been unmuted successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User has been unmuted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "user_id and moderator are required"
                }
              }
            }
          },
          "404": {
            "description": "Muted role not found.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Muted role not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/kick-user": {
      "post": {
        "summary": "Kick a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Violation of rules"
                  },
                  "evidence": {
                    "type": "string",
                    "example": "Link to evidence"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "reason", "moderator"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User kicked successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "KICK action recorded successfully"
                    },
                    "moderation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 3
                        },
                        "user_id": {
                          "type": "string",
                          "example": "123456789012345678"
                        },
                        "type": {
                          "type": "string",
                          "example": "KICK"
                        },
                        "reason": {
                          "type": "string",
                          "example": "Violation of rules"
                        },
                        "evidence": {
                          "type": "string",
                          "example": "Link to evidence"
                        },
                        "moderator": {
                          "type": "string",
                          "example": "Moderator123"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "user_id, reason, and moderator are required"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "API is currently disabled",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "API is currently disabled"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/discord-ban-user": {
      "post": {
        "summary": "Ban a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "duration": {
                    "type": "string",
                    "example": "30m"
                  },
                  "reason": {
                    "type": "string",
                    "example": "Inappropriate behavior"
                  },
                  "evidence": {
                    "type": "string",
                    "example": "Link to evidence"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "duration", "reason", "moderator"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "BAN action recorded successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "BAN action recorded successfully"
                },
                "moderation": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 1
                    },
                    "user_id": {
                      "type": "string",
                      "example": "123456789012345678"
                    },
                    "type": {
                      "type": "string",
                      "example": "BAN"
                    },
                    "duration": {
                      "type": "string",
                      "example": "30m"
                    },
                    "reason": {
                      "type": "string",
                      "example": "Inappropriate behavior"
                    },
                    "evidence": {
                      "type": "string",
                      "example": "Link to evidence"
                    },
                    "moderator": {
                      "type": "string",
                      "example": "Moderator123"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "user_id, duration, reason, and moderator are required"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/discord-unban-user": {
      "post": {
        "summary": "Unban a User",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "user_id": {
                    "type": "string",
                    "example": "123456789012345678"
                  },
                  "moderator": {
                    "type": "string",
                    "example": "Moderator123"
                  }
                },
                "required": ["user_id", "moderator"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been unbanned successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "example": "User has been unbanned successfully"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, required fields are missing.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "user_id and moderator are required"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "string",
                  "example": "Internal Server Error"
                }
              }
            }
          }
        }
      }
    }
  }
}
